name: Build and Push image to ACR

# Controls when the workflow will run
# on: workflow_dispatch

env:
  registryName: tqwsssdbmov7qwthreg
  repositoryName: dockertestimage
  dockerFolderPath: Application/src/RazorPagesTestSample
  tag: ${{ github.sha }}
  #tag: latest
  ACR_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
  image_name: dockertestimage
  login_server: tqwsssdbmov7qwthreg.azurecr.io

on:
  push:
    branches: [ "main" ]
    paths: 'Application/**'
  pull_request:
    branches: [ "main" ]
    paths: 'Application/**'
  workflow_dispatch:
    
jobs:
  # This workflow contains a job called "build"
  build1:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Build
      run: dotnet build --no-restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Test
      run: dotnet test --no-build --verbosity normal ./Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj
    
  build2:
    needs: build1 #waits for Build 1 to complete.
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
  
      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.USER_NAME }}
          # Container registry password
          password: ${{ secrets.PASSWORD }}
          # Container registry server url
          login-server: ${{ env.login_server }}
          
      - name: Build and Push Image to ACR
        run: |
          cd Application/src/RazorPagesTestSample/
          ls -l
          $dockerFolderPath/docker build -t ${{ env.ACR_REGISTRY }}/${{ env.image_name }}:${{ env.tag }} .
          $dockerFolderPath/docker push ${{ env.ACR_REGISTRY }}/${{ env.image_name }}:${{ env.tag }}
